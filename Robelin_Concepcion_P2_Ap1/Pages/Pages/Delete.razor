@page "/Delete"
@page "/Delete/{VehiculoId:int}"
@inject NavigationManager Navigation
@inject HttpClient httpClient
@inject IJSRuntime JSRuntime

<div class="card">
    <div class="card-header">
        <h1>¿Desea Eliminar?</h1>
    </div>
    <div class="card-body">
        <h5 class="card-title">Detalles del Vehiculo</h5>
        <dl class="row">

            <dt class="col-sm-3">VehiculoId:</dt>
            <dd class="col-sm-9">@vehiculo.VehiculoId</dd>

            <dt class="col-sm-3">Fecha:</dt>
            <dd class="col-sm-9">@vehiculo.Fecha</dd>

            <dt class="col-sm-3">Descripci&oacute;n:</dt>
            <dd class="col-sm-9">@vehiculo.Descripción</dd>

            <dt class="col-sm-3">Costo:</dt>
            <dd class="col-sm-9">@vehiculo.Costo.ToString("N2")</dd>

            <dt class="col-sm-3">Gastos:</dt>
            <dd class="col-sm-9">@vehiculo.Gastos.ToString("N2")</dd>


        </dl>
        <table class="table table-bordered table-hover">
            <thead>
                <tr>
                    <th>VehiculoId</th>
                    <th>AccesorioId</th>
                    <th>Valor</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var detalle in ListaVehiculoDetalle)
                {
                    <tr>
                        <td>@detalle.VehiculoId</td>
                        <td>@detalle.AccesorioId</td>
                        <td>@detalle.Valor.ToString("N2")</td>

                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="card-footer">
        <button type="button" class="btn btn-outline-primary" @onclick="Atras">Volver <i class="bi bi-arrow-return-left" /></button>
        <button type="button" class="btn btn-outline-danger" @onclick="Eliminar">Eliminar <i class="bi bi-trash" /></button>
    </div>
</div>

@code {
    [Parameter]
    public int VehiculoId { get; set; }
    public Vehiculos vehiculo { get; set; } = new Vehiculos();
    public VehiculosDetalle vehiculoDetalle { get; set; } = new VehiculosDetalle();
    public List<VehiculosDetalle> ListaVehiculoDetalle { get; set; } = new List<VehiculosDetalle>();

    protected override async Task OnInitializedAsync()
    {
        if (VehiculoId > 0)
        {
            var vehiculoEncontrado = await httpClient.GetFromJsonAsync<Vehiculos>($"api/Vehiculos/{VehiculoId}");
            if (vehiculoEncontrado != null)
            {
                vehiculo = vehiculoEncontrado;
                ListaVehiculoDetalle = vehiculo.vehiculosDetalle.ToList();
            }
        }
    }
    public async Task Eliminar()
    {
        var response = await httpClient.DeleteAsync($"api/Vehiculos/{vehiculo.VehiculoId}");
        if (!response.IsSuccessStatusCode)
        {
            return;
        }
        Atras();
    }
    void Atras()
    {
        Navigation.NavigateTo("/Index");
    }
}